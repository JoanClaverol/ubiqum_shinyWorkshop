)
)
)
server <- function(input, output, session) {
output$firstPlot <- renderPlot({
hist(data$amount)
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "My first shiny app"),
dashboardSidebar(
menuItem(text = "First menu", tabName = "firstMenu", icon = icon("fas fa-anchor")),
menuItem(text = "Second menu", tabName = "secondMenu", icon = icon("fas fa-anchor")),
menuItem(text = "Third menu", tabName = "thirdMenu", icon = icon("fas fa-anchor"))
),
dashboardBody(
fluidRow(
box(plotOutput(outputId = "firstPlot"))
)
)
)
server <- function(input, output, session) {
output$firstPlot <- renderPlot({
hist(data$amount)
})
}
shinyApp(ui, server)
library(shiny)
ui <- dashboardPage(
dashboardHeader(title = "My first shiny app"),
dashboardSidebar(
menuItem(text = "First menu", tabName = "firstMenu", icon = icon("fas fa-anchor"),
menuSubItem(text = "select nº of breaks", tabName = "firstSubMenu")),
menuItem(text = "Second menu", tabName = "secondMenu", icon = icon("fas fa-anchor")),
menuItem(text = "Third menu", tabName = "thirdMenu", icon = icon("fas fa-anchor"))
),
dashboardBody(
fluidRow(
box(plotOutput(outputId = "firstPlot"))
)
)
)
server <- function(input, output, session) {
output$firstPlot <- renderPlot({
hist(data$amount)
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "My first shiny app"),
dashboardSidebar(
menuItem(text = "First menu", tabName = "firstMenu", icon = icon("fas fa-anchor"),
menuSubItem(text = "select nº of breaks", tabName = "firstSubMenu"),
sliderInput(inputId = "slider1", label = "Select nº of breaks", min = 0, max = 100, value = 50)),
menuItem(text = "Second menu", tabName = "secondMenu", icon = icon("fas fa-anchor")),
menuItem(text = "Third menu", tabName = "thirdMenu", icon = icon("fas fa-anchor"))
),
dashboardBody(
fluidRow(
box(plotOutput(outputId = "firstPlot"))
)
)
)
server <- function(input, output, session) {
output$firstPlot <- renderPlot({
hist(data$amount)
})
}
shinyApp(ui, server)
# libraries ----
library(shiny)
library(shinydashboard)
# import data ----
data <- read.csv("data/Blackwell_Demographic_Data.csv")
# user interface ----
ui <- dashboardPage(
)
# server ------
server <- function(input, output, session) {
}
shinyApp(ui, server)
# libraries ----
library(shiny)
library(shinydashboard)
# import data ----
data <- read.csv("data/Blackwell_Demographic_Data.csv")
# user interface ----
ui <- dashboardPage(
)
# server ------
server <- function(input, output, session) {
}
shinyApp(ui, server)
ui <- dashboardPage(
)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
data <- read.csv("data/Blackwell_Demographic_Data.csv")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
hist(data$age)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
hist(data$age, breaks = 3)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(shinydashboard)
# import data ----
data <- read.csv("data/Blackwell_Demographic_Data.csv")
# import data ----
data <- read.csv("data/Blackwell_Demographic_Data.csv")
ui <- fluidPage(
)
library(shiny)
# import data ----
data <- read.csv("data/Blackwell_Demographic_Data.csv")
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
ggplot2::ggplot()
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "My first app"),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) {
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "My first app"),
dashboardSidebar(
menuItem()
),
dashboardBody()
)
ui <- dashboardPage(
dashboardHeader(title = "My first app"),
dashboardSidebar(
menuItem(
text = "first menu"
)
),
dashboardBody()
)
server <- function(input, output) {
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "My first app"),
dashboardSidebar(
menuItem(
text = "first menu", tabName = "fristMenuName"
)
),
dashboardBody(
fluidRow(
box()
)
)
)
server <- function(input, output) {
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "My first app"),
dashboardSidebar(
menuItem(
text = "first menu", tabName = "fristMenuName"
)
),
dashboardBody(
fluidRow(
box(
plotOutput()
)
)
)
)
server <- function(input, output) {
}
ui <- dashboardPage(
dashboardHeader(title = "My first app"),
dashboardSidebar(
menuItem(
text = "first menu", tabName = "fristMenuName"
)
),
dashboardBody(
fluidRow(
box(
plotOutput(outputId = "plotHistogram")
)
)
)
)
server <- function(input, output) {
}
shinyApp(ui, server)
data <- read.csv("data/Blackwell_Demographic_Data.csv")
ui <- dashboardPage(
dashboardHeader(title = "My first app"),
dashboardSidebar(
menuItem(
text = "first menu", tabName = "fristMenuName"
)
),
dashboardBody(
fluidRow(
box(
plotOutput(outputId = "plotHistogram")
)
)
)
)
server <- function(input, output) {
output$plotHistogram <- renderPlot({
hist(data$age, breaks = 10)
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "My first app"),
dashboardSidebar(
menuItem(
text = "first menu", tabName = "fristMenuName",
sliderInput(inputId = 'sliderInput')
)
),
dashboardBody(
fluidRow(
box(
plotOutput(outputId = "plotHistogram")
)
)
)
)
ui <- dashboardPage(
dashboardHeader(title = "My first app"),
dashboardSidebar(
menuItem(
text = "first menu", tabName = "fristMenuName",
sliderInput(inputId = 'sliderInput', min = 0, max = 50)
)
),
dashboardBody(
fluidRow(
box(
plotOutput(outputId = "plotHistogram")
)
)
)
)
ui <- dashboardPage(
dashboardHeader(title = "My first app"),
dashboardSidebar(
menuItem(
text = "first menu", tabName = "fristMenuName",
sliderInput(inputId = 'sliderInput', min = 0, max = 50, value = 25)
)
),
dashboardBody(
fluidRow(
box(
plotOutput(outputId = "plotHistogram")
)
)
)
)
ui <- dashboardPage(
dashboardHeader(title = "My first app"),
dashboardSidebar(
menuItem(
text = "first menu", tabName = "fristMenuName",
sliderInput(inputId = 'sliderInput', label = "Nº of breaks: ", min = 0, max = 50, value = 25)
)
),
dashboardBody(
fluidRow(
box(
plotOutput(outputId = "plotHistogram")
)
)
)
)
server <- function(input, output) {
output$plotHistogram <- renderPlot({
hist(data$age, breaks = 10)
})
}
shinyApp(ui, server)
server <- function(input, output) {
output$plotHistogram <- renderPlot({
hist(data$age, breaks = input$sliderInput)
})
}
shinyApp(ui, server)
iris
hist(iris$Sepal.Length)
library(shinydashboard)
library(shiny)
ui <- fluidPage(
)
server <- function(input, output) {
}
shinyApp(ui, server)
ui <- dashboardPage(
)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) {
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(
title = "my first app"
),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) {
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(
title = "my first app"
),
dashboardSidebar(
menuItem()
),
dashboardBody()
)
ui <- dashboardPage(
dashboardHeader(
title = "my first app"
),
dashboardSidebar(
menuItem(
text = 'frist menu item'
)
),
dashboardBody()
)
server <- function(input, output) {
}
shinyApp(ui, server)
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(
title = "my first app"
),
dashboardSidebar(
menuItem(
text = 'first menu item'
)
),
dashboardBody(
fluidRow(
box()
)
)
)
server <- function(input, output) {
}
shinyApp(ui, server)
library(shinydashboard)
library(shiny)
ui <- dashboardPage(
dashboardHeader(
title = "my first app"
),
dashboardSidebar(
menuItem(
text = 'first menu item'
)
),
dashboardBody(
fluidRow(
box(
plotOutput(
outputId = "HistogramPlot"
)
)
)
)
)
server <- function(input, output) {
}
shinyApp(ui, server)
server <- function(input, output) {
output$HistogramPlot <- renderPlot({
})
}
shinyApp(ui, server)
server <- function(input, output) {
output$HistogramPlot <- renderPlot({
hist(iris$Sepal.Length)
})
}
shinyApp(ui, server)
server <- function(input, output) {
output$HistogramPlot <- renderPlot({
hist(iris$Sepal.Length, breaks = 10)
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(
title = "my first app"
),
dashboardSidebar(
menuItem(
text = 'first menu item',
sliderInput()
)
),
dashboardBody(
fluidRow(
box(
plotOutput(
outputId = "HistogramPlot"
)
)
)
)
)
ui <- dashboardPage(
dashboardHeader(
title = "my first app"
),
dashboardSidebar(
menuItem(
text = 'first menu item',
sliderInput(min = 0, max = 10, value = 5)
)
),
dashboardBody(
fluidRow(
box(
plotOutput(
outputId = "HistogramPlot"
)
)
)
)
)
server <- function(input, output) {
output$HistogramPlot <- renderPlot({
hist(iris$Sepal.Length, breaks = 10)
})
}
ui <- dashboardPage(
dashboardHeader(
title = "my first app"
),
dashboardSidebar(
menuItem(
text = 'first menu item',
sliderInput(inputId = 'sliderSelection',
label = 'Select nº of breaks: ',
min = 0, max = 10, value = 5)
)
),
dashboardBody(
fluidRow(
box(
plotOutput(
outputId = "HistogramPlot"
)
)
)
)
)
server <- function(input, output) {
output$HistogramPlot <- renderPlot({
hist(iris$Sepal.Length, breaks = 10)
})
}
shinyApp(ui, server)
